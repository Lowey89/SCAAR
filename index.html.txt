<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Share Portfolio Dashboard</title>
  <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/PapaParse/5.4.1/papaparse.min.js"></script>
  <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
</head>
<body class="bg-gray-100 text-gray-800">
  <div class="max-w-6xl mx-auto p-4">
    <h1 class="text-3xl font-bold mb-4 text-center">ðŸ“ˆ Share Portfolio Dashboard</h1>

    <!-- Summary Section -->
    <div class="grid grid-cols-2 md:grid-cols-4 gap-4 mb-8" id="summary"></div>

    <!-- Table -->
    <div class="overflow-x-auto">
      <table class="min-w-full bg-white shadow rounded-lg overflow-hidden">
        <thead class="bg-blue-500 text-white">
          <tr>
            <th class="p-2 text-left">Share</th>
            <th class="p-2 text-right">Qty</th>
            <th class="p-2 text-right">Book Cost</th>
            <th class="p-2 text-right">Market Value</th>
            <th class="p-2 text-right">Gain (Â£)</th>
            <th class="p-2 text-right">Gain (%)</th>
            <th class="p-2 text-right">Buy Date</th>
          </tr>
        </thead>
        <tbody id="portfolio-data" class="divide-y divide-gray-200"></tbody>
      </table>
    </div>

    <!-- Charts -->
    <div class="mt-10 grid grid-cols-1 md:grid-cols-2 gap-6">
      <canvas id="valueChart"></canvas>
      <canvas id="gainChart"></canvas>
    </div>
  </div>

  <script>
    const sheetURL = 'https://docs.google.com/spreadsheets/d/e/2PACX-1vQQA-BBUHHqPyUuxxE2ajAZNaEjIQGR34Mzl8cQJdMFjEn913auL1w2mqTz_S6FhkHeyTFnf8D4zNDX/pub?gid=1715624561&single=true&output=csv';

    async function loadCSVData(url) {
      const res = await fetch(url);
      const csvText = await res.text();
      return Papa.parse(csvText, { header: true }).data;
    }

    function formatCurrency(n) {
      return 'Â£' + parseFloat(n).toFixed(2);
    }

    function renderSummary(data) {
      let totalBook = 0, totalMarket = 0;
      data.forEach(d => {
        totalBook += parseFloat(d['Book Cost']) || 0;
        totalMarket += parseFloat(d['Market Value']) || 0;
      });
      const gain = totalMarket - totalBook;
      const gainPct = totalBook ? (gain / totalBook * 100) : 0;

      const summary = document.getElementById('summary');
      summary.innerHTML = `
        <div class="bg-white p-4 rounded shadow">Total Book Cost<br><strong>${formatCurrency(totalBook)}</strong></div>
        <div class="bg-white p-4 rounded shadow">Market Value<br><strong>${formatCurrency(totalMarket)}</strong></div>
        <div class="bg-white p-4 rounded shadow">Gain/Loss (Â£)<br><strong>${formatCurrency(gain)}</strong></div>
        <div class="bg-white p-4 rounded shadow">Gain/Loss (%)<br><strong>${gainPct.toFixed(2)}%</strong></div>
      `;
    }

    function renderTable(data) {
      const tbody = document.getElementById('portfolio-data');
      tbody.innerHTML = data.map(d => `
        <tr>
          <td class="p-2">${d['Share']}</td>
          <td class="p-2 text-right">${d['Qty']}</td>
          <td class="p-2 text-right">${formatCurrency(d['Book Cost'])}</td>
          <td class="p-2 text-right">${formatCurrency(d['Market Value'])}</td>
          <td class="p-2 text-right">${formatCurrency(d['Gain/Loss (Â£)'])}</td>
          <td class="p-2 text-right">${d['Gain/Loss (%)']}</td>
          <td class="p-2 text-right">${d['Buy Date']}</td>
        </tr>`).join('');
    }

    function renderCharts(data) {
      const shares = data.map(d => d['Share']);
      const bookCosts = data.map(d => parseFloat(d['Book Cost']) || 0);
      const marketValues = data.map(d => parseFloat(d['Market Value']) || 0);
      const gains = data.map(d => parseFloat(d['Gain/Loss (%)']) || 0);

      new Chart(document.getElementById('valueChart'), {
        type: 'bar',
        data: {
          labels: shares,
          datasets: [
            { label: 'Book Cost', data: bookCosts, backgroundColor: 'gray' },
            { label: 'Market Value', data: marketValues, backgroundColor: 'blue' }
          ]
        },
        options: { responsive: true, plugins: { legend: { position: 'bottom' } } }
      });

      new Chart(document.getElementById('gainChart'), {
        type: 'bar',
        data: {
          labels: shares,
          datasets: [{ label: 'Gain/Loss (%)', data: gains, backgroundColor: gains.map(g => g >= 0 ? 'green' : 'red') }]
        },
        options: { responsive: true, plugins: { legend: { display: false } } }
      });
    }

    async function init() {
      const data = await loadCSVData(sheetURL);
      renderSummary(data);
      renderTable(data);
      renderCharts(data);
    }

    init();
  </script>
</body>
</html>
